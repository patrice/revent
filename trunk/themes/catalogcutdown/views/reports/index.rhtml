<div id="national-container">
	<div class="intro-title">
		<%= @calendar.name %> Reports
	</div>
  <div id="national-intro">

<p class="view-all">View <%= link_to "All Reports", :permalink => @calendar.permalink, :controller => "reports", :action => "list"  %> of the <%= @calendar.name %></p>
      <div class="report_add">
             <%= link_to 'Add Your Own Report', :permalink => @calendar.permalink, :controller => "reports", :action => "new" %>
              </div>
    <div class="national-intro-text">
      <%#=  @calendar.name %>
    </div>
    <div class="national-intro-directions">
      <br> Click on a state or enter your zip code to find a report from an event near you...
    </div>
  </div>
  <div id="national-map-container">
    <div id='national-map-search'>
      <table cellpadding=8><tr><td valign=top><b>Search by: </b></td><td>
      <% form_tag :permalink => @calendar.permalink, :action => 'search' do -%>
         
      &nbsp;Zip Code:  <%= text_field_tag 'zip', nil, :size=>10 %>
      <%= submit_tag "GO" %><br> 
      <b>OR</b> State:
        <%= select_tag 'state', us_state_options_for_select( '', {:show => :abbreviations, :include_blank => true}), :onchange => "window.location.href='/#{@calendar.permalink}/reports/search/state/' + this.value" %>
        <% end -%></td></tr></table>
    </div>

    <%
    @map = Cartographer::Gmap.new('eventmap')
    @map.init do |m|
      m.center = @map_center || [45,-93]
      m.zoom = @map_zoom || 3
      m.controls = [:zoom, :large]
    end
    @green_dot = Cartographer::Gicon.new(:name => 'green_dot', :image_url => '/images/green_dot.png', :shadow_url => '', :width => 10, :height => 10, :anchor_x => 5, :anchor_y => 5)
    @red_dot  = Cartographer::Gicon.new(:name => 'red_dot', :image_url => '/images/red_dot.png', :shadow_url => '', :width => 10, :height => 10, :anchor_x => 5, :anchor_y => 5)
    @map.icons << @green_dot
    @map.icons << @red_dot
    @calendar.events.each do |e|
      marker = nil

        coordinates = false
        if e.latitude && e.longitude
          coordinates = [e.latitude, e.longitude]
        elsif e.fallback_latitude && e.fallback_longitude
          coordinates = [e.fallback_latitude, e.fallback_longitude]
        end
        marker = coordinates ? Cartographer::Gmarker.new( 
        :name => "event_#{e.id}_marker",
        :position => coordinates,
        :click => "window.location.href='#{url_for :controller => 'reports', :action => 'show', :event_id => e.id}';") : nil
        # :info_window => render_to_string(:partial => 'info_window', :locals => {:event => e}), :icon => @icon.name 

        marker.icon = e.reports.empty? ? @red_dot.name : @green_dot.name
      @map.markers << marker if marker
    end
   %>

		<div id="eventmap" style="width: 450px; height: 350px; border: 7px solid #ccc; margin-left:15px;">
		</div>
    <%= @map.to_html %>
    <%= gmaps_auto_center_and_zoom(@map) if @auto_center %>

  </div>
    <div class="national-intro-count">
      <p><img src="/images/green_dot.png"> Green Dot = Events with Reports  |  <img src="/images/red_dot.png"> = Events without Reports</P>
      
<!--      There are <%= @calendar.events.with_reports.length %> reports from  <%= @calendar.events.count %> scheduled events.
    -->      </div>
              
               <%= render :partial =>'reports/report_nav' %>                
</div>
