<div id="national-container">
  <div id="national-intro">
    <div class="national-intro-text">
      <%#=  @calendar.name %>
    </div>
    <div class="national-intro-count">
      <!--      There are <%= pluralize @calendar.events.length, @calendar.name %> in <%= @calendar.events.unique_states %> states. -->
    </div>
    <div class="national-intro-directions">
      <br />
      <% if @calendar.map_intro_text -%>
        <%= @calendar.map_intro_text %>
      <% else -%>
        Click on a state or enter your zip code to find <%= @calendar.name.pluralize %> near you...
      <% end -%>
      <br /><br />
    </div>
  </div>
  <div id="national-map-container">
    <div id='national-map-search'>
      <table cellpadding=8><tr><td valign=top><b>Search by: </b></td><td>
         <% form_tag :permalink => @calendar.permalink, :controller => 'events', :action => 'search' do -%>
         
      &nbsp;Zip/Postal Code:  <%= text_field_tag 'zip', nil, :size=>10 %>
      <%= submit_tag "GO" %><br> 
      <b>OR</b> State/Province:
      <%= select_tag 'state',
         options_for_select(DemocracyInAction::Helpers.state_options_for_select(:include_none => true, :include_provinces => true)), :onchange => "window.location.href='/#{@calendar.permalink}/events/search/state/' + this.value" %>
        <% end -%></td></tr></table>
    </div>


    <%
    @map = Cartographer::Gmap.new('eventmap')
    @map.init do |m|
      m.center = @map_center || [45,-93]
      m.zoom = @map_zoom || 3
      m.controls = [:zoom, :large]
    end
    @icon = Cartographer::Gicon.new(:image_url => '/images/green_dot.png', :shadow_url => '', :width => 10, :height => 10, :anchor_x => 5, :anchor_y => 5)
    @map.icons << @icon
	 @events = @calendar.events.searchable.find(:all, :conditions => "(latitude <> 0 AND longitude <> 0) AND state IS NOT NULL")
    @events.each do |e|
      marker = nil

        coordinates = false
        if e.latitude && e.longitude
          coordinates = [e.latitude, e.longitude]
        end
        marker = coordinates ? Cartographer::Gmarker.new( 
        :name => "event_#{e.id}_marker",
        :position => coordinates,
       :click => "window.location.href='#{url_for :controller => 'events', :action => 'show', :id => e.id}';") : nil
      #  :info_window => render_to_string(:partial => 'info_window', :locals => {:event => e}), :icon => @icon.name 

      @map.markers << marker if marker
    end
   %>

		<div id="eventmap" style="width: 450px; height: 350px; border: 7px solid #ccc; margin-left:15px;">
		</div>
    <%= @map.to_html %>
    <%= gmaps_auto_center_and_zoom(@map) if @auto_center %>
  </div>

  <div id="national-footer">
   
  </div>
</div>
